/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-06-28 15:23:17 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.Set;
import java.util.HashSet;
import entidades.ArrayProducto;

public final class carrito_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/CIBERTEC/Tercer%20Ciclo%202022-01/LENGUAJE%20DE%20PROGRAMACIÓN%20I/PROYECTO/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/ProyectoLP1/WEB-INF/lib/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153403082000L));
    _jspx_dependants.put("/WEB-INF/lib/jstl-1.2.jar", Long.valueOf(1686191688000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.HashSet");
    _jspx_imports_classes.add("java.util.Set");
    _jspx_imports_classes.add("entidades.ArrayProducto");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=ISO-8859-1");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("	<link rel=\"icon\" href=\"./images/icono_quickshop.png\">\r\n");
      out.write("	<title>Carrito de Compras</title>\r\n");
      out.write("	<link rel=\"stylesheet\" href=\"./cssssss/carritossssss.css\">\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n");
      out.write("	<link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n");
      out.write("	<link href=\"https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600&display=swap\"	rel=\"stylesheet\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	<!-- HEADER -->\r\n");
      out.write("	<header class=\"header\">\r\n");
      out.write("		<div class=\"logo\">\r\n");
      out.write("			<img src=\"./images/definitivo black.png\">\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"saludo\">\r\n");
      out.write("			<h3>Bienvenido, ");
      out.print(session.getAttribute("nombre1"));
      out.write("!</h3>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"user\">\r\n");
      out.write("			<button class=\"dropbtn\">\r\n");
      out.write("				<img src=\"./images/user.png\"> <i class=\"fa fa-caret-down\"></i>\r\n");
      out.write("			</button>\r\n");
      out.write("			<div class=\"dropdown-content\">\r\n");
      out.write("				<a href=\"actualizar.jsp\">Actualizar Datos</a>\r\n");
      out.write("				<a href=\"listadoPedidos.jsp\">Mis Pedidos</a>\r\n");
      out.write("				<a href=\"ServletUsuario?tipo=Salir\">Cerrar Sesión</a>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</header>\r\n");
      out.write("\r\n");
      out.write("	<!-- MAIN -->\r\n");
      out.write("	<main>\r\n");
      out.write("\r\n");
      out.write("		<div class=\"lista\">\r\n");
      out.write("			<h1>Carrito de Compras</h1>\r\n");
      out.write("\r\n");
      out.write("			");

			ArrayProducto ac = (ArrayProducto) request.getSession().getAttribute("listaProducto");

			if (ac != null && ac.tamaño() > 0) {
				Set<Integer> idsProductos = new HashSet<>();
				double totalPrecio = 0;

				for (int i = 0; i < ac.tamaño(); i++) {
					entidades.Producto producto = ac.obtener(i);
					int idProducto = producto.getIdproducto();

					// Verificar si el producto ya se ha mostrado anteriormente
					if (idsProductos.contains(idProducto)) {
				continue; // Saltar al siguiente producto sin mostrarlo nuevamente
					}

					// Agregar el ID del producto al conjunto
					idsProductos.add(idProducto);

					// Calcular la suma de los precios
					totalPrecio += producto.getcantidad() * producto.getPrecioPro();
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("			<div class=\"productos\">\r\n");
      out.write("\r\n");
      out.write("				<div class=\"card\">\r\n");
      out.write("					<div class=\"imagen\">\r\n");
      out.write("						<div class=\"card-img\">\r\n");
      out.write("							<img src=\"");
      out.print(producto.getImagenPro());
      out.write("\">\r\n");
      out.write("						</div>\r\n");
      out.write("					</div>\r\n");
      out.write("					<div class=\"descripcion\">\r\n");
      out.write("						<div class=\"card-info\">\r\n");
      out.write("							<p class=\"text-title\">\r\n");
      out.write("								<b>ID Producto: ");
      out.print(producto.getIdproducto());
      out.write("</b>\r\n");
      out.write("							</p>\r\n");
      out.write("							<p class=\"text-body\">");
      out.print(producto.getDescripcionPro());
      out.write("</p>\r\n");
      out.write("						</div>\r\n");
      out.write("						<div class=\"cantidad\">\r\n");
      out.write("							<span class=\"text-title\">Cantidad: <br> \r\n");
      out.write("							<b>");
      out.print(producto.getcantidad());
      out.write("</b>\r\n");
      out.write("							</span>\r\n");
      out.write("							<span class=\"text-title\">Precio Unitario: <br>\r\n");
      out.write("								<b>S/ ");
      out.print(producto.getPrecioPro());
      out.write("</b>\r\n");
      out.write("							</span>\r\n");
      out.write("						</div>\r\n");
      out.write("\r\n");
      out.write("						<form action=\"ServletCarrito\" method=\"post\">\r\n");
      out.write("							<!-- Otros campos del formulario -->\r\n");
      out.write("\r\n");
      out.write("							<input type=\"hidden\" name=\"tipo\" value=\"eliminar\"> \r\n");
      out.write("							<input type=\"hidden\" name=\"eliminarIdProducto\"value=\"");
      out.print(producto.getIdproducto());
      out.write("\"> \r\n");
      out.write("							<input type=\"hidden\" name=\"tipo\" value=\"pagar\">\r\n");
      out.write("							<button type=\"submit\">Eliminar</button>\r\n");
      out.write("						</form>\r\n");
      out.write("					</div>\r\n");
      out.write("\r\n");
      out.write("					<div class=\"precio\">\r\n");
      out.write("						<h1>");
      out.print(producto.getNombrePro());
      out.write("</h1>\r\n");
      out.write("						<h2>S/ ");
      out.print(Math.round(producto.getPrecioPro() * producto.getcantidad() * 100.0) / 100.0);
      out.write("</h2>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");

			}
			} else {
			
      out.write("\r\n");
      out.write("			<div class=\"null\">\r\n");
      out.write("				<div class=\"svg-container\">\r\n");
      out.write("					<a href=\"carrito.jsp\" class=\"carrito\">\r\n");
      out.write("						<svg width=\"100\" height=\"100\" fill=\"rgb(255, 69, 69)\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n");
      out.write("							<path d=\"M21.08 7a2 2 0 0 0-1.7-1H6.58L6 3.74A1 1 0 0 0 5 3H3a1 1 0 1 0 0 2h1.24L7 15.26A1 1 0 0 0 8 16h9a1.001 1.001 0 0 0 .89-.55l3.28-6.56A2 2 0 0 0 21.08 7Z\"></path>\r\n");
      out.write("							<path d=\"M7.5 21a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path>\r\n");
      out.write("							<path d=\"M17.5 21a1.5 1.5 0 1 0 0-3 1.5 1.5 0 0 0 0 3Z\"></path>\r\n");
      out.write("						</svg>\r\n");
      out.write("					</a>\r\n");
      out.write("				</div>\r\n");
      out.write("				<p class=\"mensaje\">\r\n");
      out.write("					Oh vaya! <br> No hay productos en el carrito.\r\n");
      out.write("				</p>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");

			}
			
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		double totalPrecio = 0.0;

		if (ac != null && ac.tamaño() > 0) {
			Set<Integer> idsProductos = new HashSet<>();

			for (int i = 0; i < ac.tamaño(); i++) {
				entidades.Producto producto = ac.obtener(i);
				int idProducto = producto.getIdproducto();

				// Verificar si el producto ya se ha mostrado anteriormente
				if (idsProductos.contains(idProducto)) {
			continue; // Saltar al siguiente producto sin mostrarlo nuevamente
				}

				// Agregar el ID del producto al conjunto
				idsProductos.add(idProducto);

				totalPrecio += producto.getPrecioPro() * producto.getcantidad();
			}
		}
		
      out.write("\r\n");
      out.write("\r\n");
      out.write("		<div class=\"pagar\">\r\n");
      out.write("			<h1>Pago</h1>\r\n");
      out.write("			<div class=\"contenido\">\r\n");
      out.write("				<div class=\"titulo\">\r\n");
      out.write("					<h2>Producto</h2>\r\n");
      out.write("					<h2>Precio</h2>\r\n");
      out.write("				</div>\r\n");
      out.write("					");

					if (ac != null && ac.tamaño() > 0) {
						Set<Integer> idsProductos = new HashSet<>();
	
						for (int i = 0; i < ac.tamaño(); i++) {
							entidades.Producto producto = ac.obtener(i);
							int idProducto = producto.getIdproducto();
	
							// Verificar si el producto ya se ha mostrado anteriormente
							if (idsProductos.contains(idProducto)) {
						continue; // Saltar al siguiente producto sin mostrarlo nuevamente
							}
	
							// Agregar el ID del producto al conjunto
							idsProductos.add(idProducto);
					
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div class=\"registro\">\r\n");
      out.write("					<div>");
      out.print(producto.getNombrePro());
      out.write(' ');
      out.write('x');
      out.print(producto.getcantidad());
      out.write("</div>\r\n");
      out.write("					<div class=\"precioPro\">");
      out.print(Math.round(producto.getPrecioPro() * producto.getcantidad() * 100.0) / 100.0);
      out.write("</div>\r\n");
      out.write("				</div>\r\n");
      out.write("\r\n");
      out.write("				");

				} // Fin del bucle for
				
      out.write("\r\n");
      out.write("\r\n");
      out.write("				<div class=\"total\">\r\n");
      out.write("					<div>Total a Pagar</div>\r\n");
      out.write("					<div style=\"display: flex\">\r\n");
      out.write("						<div>S/</div>\r\n");
      out.write("						<div name=\"total\">");
      out.print(Math.round(totalPrecio * 100.00) / 100.00);
      out.write("</div>\r\n");
      out.write("					</div>\r\n");
      out.write("				</div>\r\n");
      out.write("			</div>\r\n");
      out.write("\r\n");
      out.write("			");

			} else {
			
      out.write("\r\n");
      out.write("\r\n");
      out.write("		</div>\r\n");
      out.write("		");

		} // Fin de la condición if-else
		
      out.write("\r\n");
      out.write("		<div class=\"comprar\">\r\n");
      out.write("			<form action=\"ServletCarrito\" method=\"post\">\r\n");
      out.write("				<input type=\"hidden\" name=\"nombre1\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${nombre1}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("				<input type=\"hidden\" name=\"total\" value=\"");
      out.print(Math.round(totalPrecio * 100.00) / 100.00);
      out.write("\">\r\n");
      out.write("				<input type=\"submit\" value=\"Ir a Pagar\" name=\"tipo\">\r\n");
      out.write("			</form>\r\n");
      out.write("		</div>\r\n");
      out.write("		<div class=\"svg-back\">\r\n");
      out.write("			<a href=\"listadoProductos.jsp\" class=\"volver\">\r\n");
      out.write("				<svg width=\"81\"	height=\"81\" fill=\"#2acf86\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\r\n");
      out.write("					<path d=\"M22 12a10 10 0 1 0-20 0 10 10 0 0 0 20 0Zm-11.86 3.69-2.86-3a.49.49 0 0 1-.1-.15.54.54 0 0 1-.1-.16.94.94 0 0 1 0-.76 1 1 0 0 1 .21-.33l3-3a1.004 1.004 0 0 1 1.42 1.42L10.41 11H16a1 1 0 0 1 0 2h-5.66l1.25 1.31a1.001 1.001 0 0 1-1.45 1.38Z\"></path>\r\n");
      out.write("				</svg>\r\n");
      out.write("			</a>\r\n");
      out.write("		</div>\r\n");
      out.write("\r\n");
      out.write("	</main>\r\n");
      out.write("\r\n");
      out.write("	<div class=\"background\"></div>\r\n");
      out.write("\r\n");
      out.write("	<script src=\"./javascript/carritos.js\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
